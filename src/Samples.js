// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Diff$ReactTemplate from "./Diff.js";
import * as Styp$ReactTemplate from "./Styp.js";
import * as Belt_List$ReactTemplate from "./Belt_List.js";
import * as TypeCheck$ReactTemplate from "./TypeCheck.js";

var empty = /* record */[
  /* samples : [] */0,
  /* sum */Styp$ReactTemplate.stypEmpty,
  /* prevSum */Styp$ReactTemplate.stypEmpty,
  /* common */Styp$ReactTemplate.stypEmpty,
  /* prevCommon */Styp$ReactTemplate.stypEmpty
];

function toList(param) {
  return Belt_List$ReactTemplate.reverse(param[/* samples */0]);
}

function getSum(param) {
  return param[/* sum */1];
}

function getCommon(param) {
  return param[/* common */3];
}

function getLast(param) {
  var samples = param[/* samples */0];
  if (samples) {
    return samples[0];
  } else {
    return Styp$ReactTemplate.stypEmpty;
  }
}

function getPrev(param) {
  var samples = param[/* samples */0];
  if (samples) {
    var match = samples[1];
    if (match) {
      return match[0];
    } else {
      return Styp$ReactTemplate.stypEmpty;
    }
  } else {
    return Styp$ReactTemplate.stypEmpty;
  }
}

function getPrevSum(param) {
  return param[/* prevSum */2];
}

function getPrevCommon(param) {
  return param[/* prevCommon */4];
}

function add(t, styp) {
  var samples_001 = t[/* samples */0];
  var samples = /* :: */[
    styp,
    samples_001
  ];
  var prevSum = t[/* sum */1];
  var sum = TypeCheck$ReactTemplate.$caret(t[/* sum */1], styp);
  var prevCommon = t[/* common */3];
  var match = t[/* samples */0] === /* [] */0;
  var common = match ? styp : Styp$ReactTemplate.stripDiffStyp(Diff$ReactTemplate.diff(t[/* common */3], styp)[/* stypB */4]);
  return /* record */[
          /* samples */samples,
          /* sum */sum,
          /* prevSum */prevSum,
          /* common */common,
          /* prevCommon */prevCommon
        ];
}

function addMany(t, styps) {
  var styp = Belt_List$ReactTemplate.reduce(styps, Styp$ReactTemplate.stypEmpty, TypeCheck$ReactTemplate.$caret);
  return add(t, styp);
}

function fromList(styps) {
  return Belt_List$ReactTemplate.reduce(styps, empty, add);
}

function getAllDiffs(t) {
  var common = getCommon(t);
  return Belt_List$ReactTemplate.map(toList(t), (function (styp) {
                return Diff$ReactTemplate.diff(common, styp);
              }));
}

export {
  add ,
  addMany ,
  empty ,
  fromList ,
  getAllDiffs ,
  getCommon ,
  getLast ,
  getPrev ,
  getPrevCommon ,
  getPrevSum ,
  getSum ,
  toList ,
  
}
/* No side effect */
